<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <configSections>
    <!--<section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler,log4net" />-->
    <section name="activerecord" type="Castle.ActiveRecord.Framework.Config.ActiveRecordSectionHandler, Castle.ActiveRecord"/>
    <section name="brail" type="Castle.MonoRail.Views.Brail.BrailConfigurationSection, Castle.MonoRail.Views.Brail" />

		<section name="castle" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" />
  </configSections>

  <activerecord pluralizeTableNames="false" default-lazy="true" isDebug="false" isWeb="false">
    <config>
      <add key="connection.driver_class" value="NHibernate.Driver.SQLite20Driver" />
      <add key="dialect" value="NHibernate.Dialect.SQLiteDialect" />
      <add key="connection.provider" value="NHibernate.Connection.DriverConnectionProvider" />
			<!--<add key="connection.connection_string" value="Data Source=:memory:;Version=3;New=True;Pooling=True;Max Pool Size=1"/>-->
			<add key="connection.connection_string" value="Data Source=test.db;Version=3;New=True"/>
      <add key="query.substitutions" value="true=1;false=0"/>
      <add key="show_sql" value="false"/>
      <!--add key="cache.provider_class" value="NHibernate.Caches.SysCache.SysCacheProvider, NHibernate.Caches.SysCache" /-->
      <add key="proxyfactory.factory_class" value="NHibernate.ByteCode.Castle.ProxyFactoryFactory, NHibernate.ByteCode.Castle"/>
      <add key="expiration" value="6000" />
      <add key="cache.use_query_cache" value="false" />
      <add key="adonet.batch_size" value="25"/>
    </config>
  </activerecord>

  <brail debug="false" saveToDisk="false" saveDirectory="BrailGen" batch="false" commonScriptsDirectory="CommonScripts">
    <reference assembly="Castle.MonoRail.Framework"/>
    <reference assembly="JelloScrum.Model"/>

    <reference assembly="JelloScrum.Web"/>
    <!-- .net specific -->
    <import namespace="System"/>
    <!-- boo specific -->
    <import namespace="Boo.Lang"/>
    <import namespace="Boo.Lang.Builtins"/>

    <!-- JelloScrum.Tests specific -->
    <import namespace="JelloScrum.Web.Controllers"/>
    <import namespace="JelloScrum.Web.Common"/>
    <import namespace="JelloScrum.Model"/>
  </brail>

	<castle>
		<components>
			<!--Registreer hieronder alle componenten die in de container geregistreerd moeten worden -->
			<!-- Dit gaat als volgt:
			<component id="hier een identifier voor het component"
					     service="noem hier de interface die gebruikt wordt voor het resolven van het component"
						 type="het type van het component, dus de implementatie"
						 lifestyle="kies een lifestyle (dus singleton of transient oid.)">
			 
			 je kunt ook nog optioneel parameters opgeven die in de constructor of als property bij het component staan:
			<parameters>
				   <parametername (=de naam van de variabele in de constructor of de naam van de property)>waarde</parametername>
			</parameters>
			</component>
		
			zie verder http://www.castleproject.org/container/documentation/trunk/manual/windsorconfigref.html -->

			<!--<component id="emailsender_service" service="Castle.Components.Common.EmailSender.IEmailSender" type="Castle.Components.Common.EmailSender.Smtp.SmtpSender">
				<parameters>
					<hostname>bert</hostname>
				</parameters>
			</component>

			<component id="emailtemplate_service" service="Castle.MonoRail.Framework.IEmailTemplateService" type="Castle.MonoRail.Framework.EmailTemplateService"></component>

			<component id="email_service" service="JelloScrum.Model.Services.IEmailService, JelloScrum.Services.EmailService">
				<parameters>
					<bccEmailAddress>duncan@auxilium.nl</bccEmailAddress>
					<fromEmailAddress>JellowBuddy@auxilium.nl</fromEmailAddress>
				</parameters>
			</component>

			<component id="TemplateParser_service" service="JelloScrum.Model.Services.ITemplateParserService" type="JelloScrum.Services.TemplateParserService">
				<parameters>
					<viewDirectory>C:\\Working\\JelloScrum\\trunk\\JelloScrum\\JelloScrum.Web\\Views</viewDirectory>
				</parameters>
			</component>

			<component id="Login_service" service="JelloScrum.Model.Services.ILoginService" type="JelloScrum.Services.LoginService">
				<parameters>
					<LDAPPath>LDAP://bert/DC=vlaming,DC=auxilium-sd,DC=nl</LDAPPath>
					<Domain>VLAMING</Domain>
				</parameters>
			</component>

			<component id="Password_service" service="JelloScrum.Model.Services.IPasswordService" type="JelloScrum.Services.PasswordService"></component>

			<component id="Authentication_Service" service="JelloScrum.Model.Services.IAuthenticationService" type="JelloScrum.Services.AuthenticationService">
				<parameters>
					<Cookie_Name>JelloScrumCookie</Cookie_Name>
				</parameters>
			</component>

			<component id="ExcelExport_Service" service="JelloScrum.Model.Services.IExcelExportService" type="JelloScrum.Services.ExcelExportService"></component>-->
			<component id="login.service" service="JelloScrum.Login.Services.ILoginService`1, JelloScrum.Login" type="JelloScrum.Login.Services.LoginService`1, JelloScrum.Login" lifestyle="singleton"></component>
			<component id="User_Repository" service="JelloScrum.Model.IRepositories.IUserRepository, JelloScrum.Model" type="JelloScrum.Repositories.UserRepository, JelloScrum.Repositories"></component>
			<component id="Sprint_Repository" service="JelloScrum.Model.IRepositories.ISprintRepository, JelloScrum.Model" type="JelloScrum.Repositories.SprintRepository, JelloScrum.Repositories"></component>
			<component id="SprintUser_Repository" service="JelloScrum.Model.IRepositories.ISprintUserRepository, JelloScrum.Model" type="JelloScrum.Repositories.SprintUserRepository, JelloScrum.Repositories"></component>
			<component id="Project_Repository" service="JelloScrum.Model.IRepositories.IProjectRepository, JelloScrum.Model" type="JelloScrum.Repositories.ProjectRepository, JelloScrum.Repositories"></component>
			<component id="Task_Repository" service="JelloScrum.Model.IRepositories.ITaskRepository, JelloScrum.Model" type="JelloScrum.Repositories.TaskRepository, JelloScrum.Repositories"></component>
			<component id="Story_Repository" service="JelloScrum.Model.IRepositories.IStoryRepository, JelloScrum.Model" type="JelloScrum.Repositories.StoryRepository, JelloScrum.Repositories"></component>

		</components>
	</castle>

</configuration>